name: Build, push, and deploy

on: [push, pull_request]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Build and run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew test
  build:
    name: Build and push Docker container
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Setup Gradle to generate and submit dependency graphs
        uses: gradle/actions/setup-gradle@v3
        with:
          dependency-graph: generate-and-submit
      - name: Build JAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean build shadowJar -x test -x lintKotlin
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: teamcrm
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
  deploy-dev:
    name: Deploy to NAIS dev gcp
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev.yaml
          VAR: image=${{ needs.build.outputs.image }}
#  deploy-prod:
#    name: Deploy to NAIS prod gcp
#    needs: build
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    permissions:
#      id-token: write
#      contents: read
#    steps:
#      - uses: actions/checkout@v4
#      - uses: nais/deploy/actions/deploy@v2
#        env:
#          CLUSTER: prod-gcp
#          RESOURCE: .nais/prod.yaml
#          VAR: image=${{ needs.build.outputs.image }}
