plugins {
    id 'application'
    id 'java'

    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jmailen.kotlinter' version '3.2.0'
    id 'com.gradleup.shadow' version '8.3.1'
    id 'com.google.protobuf' version '0.9.4'
}

group 'no.nav.sf.pubsub'
version '0.0.1'

jar {
    manifest {
        attributes 'Main-Class': 'no.nav.sf.pubsub.BootstrapKt'
    }
}

shadowJar {
    archiveBaseName = 'app'
    archiveClassifier = ''
    mergeServiceFiles()
}

application {
    mainClassName = 'no.nav.sf.pubsub.BootstrapKt'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://packages.confluent.io/maven"
    }

    ["maven-release"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("githubPassword")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or githubPassword")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = 'x-access-token'
                password = token
            }
        }
    }
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:4.28.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'  // Add this for @Generated annotation
    implementation 'io.grpc:grpc-core:1.68.0'
    implementation 'io.grpc:grpc-api:1.68.0'
    implementation 'io.grpc:grpc-netty:1.68.0'
    implementation 'io.grpc:grpc-protobuf:1.68.0'
    implementation 'io.grpc:grpc-stub:1.68.0'
    implementation 'io.grpc:grpc-auth:1.68.0'

    implementation 'io.lettuce:lettuce-core:6.5.3.RELEASE'

    implementation "org.apache.kafka:kafka-clients:3.9.1"

    // Avro core library
    implementation 'org.apache.avro:avro:1.11.4'

    implementation 'org.yaml:snakeyaml:2.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"

    implementation 'com.google.code.gson:gson:2.10'

    implementation "org.http4k:http4k-core:5.14.4.0"
    implementation "org.http4k:http4k-server-netty:5.14.4.0"
    implementation "io.netty:netty-handler:4.1.118.Final" //Transient bump
    implementation "io.netty:netty-common:4.1.118.Final" //Transient bump
    implementation "org.http4k:http4k-client-okhttp:5.14.4.0"

    implementation "io.github.microutils:kotlin-logging:1.7.9"
    implementation "ch.qos.logback:logback-classic:1.5.13"
    implementation "net.logstash.logback:logstash-logback-encoder:8.1"

    implementation "io.prometheus:simpleclient_common:0.8.1"
    implementation "io.prometheus:simpleclient_hotspot:0.8.1"

//    implementation "net.minidev:json-smart:2.4.9" // Desired transient json-smart to token-validation above
//    implementation "org.apache.commons:commons-compress:1.26.0" //transient http4k-apache
//    implementation "org.apache.httpcomponents:httpclient:4.5.13" //Desired transient httpclient to http4k-apache
//
//    implementation "io.netty:netty-handler:4.1.118.Final"
//    implementation "io.netty:netty-common:4.1.118.Final"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions.jvmTarget = "21"
    dependsOn("mergeYamlTask")
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "21"
    targetCompatibility = "21"
}

tasks.named("compileKotlin") {
    dependsOn("generateProto")
}

// Add protobuf plugin configuration
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"  // Specify protoc version
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.42.0"  // gRPC plugin
        }
    }

    generateProtoTasks {
        all().forEach { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java',
                    'build/generated/source/proto/main/grpc'
        }
        kotlin {
            srcDirs 'src/main/kotlin'  // Add Kotlin source directory here
        }
    }
    test {
        kotlin {
            srcDirs 'src/test/kotlin'
        }
    }
}

apply from: 'mergeYamlTask.gradle'